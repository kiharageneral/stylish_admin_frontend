# Generated by Django 5.1.6 on 2025-07-29 09:50

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('agent_type', models.CharField(choices=[('inventory_manager', 'Inventory Management Agent'), ('sales_analyst', 'Sales Analysis Agent'), ('customer_insights', 'Customer Insights Agent'), ('pricing_optimizer', 'Pricing Optimization Agent'), ('marketing_strategist', 'Marketing Strategy Agent'), ('supply_chain', 'Supply Chain Agent'), ('fraud_detector', 'Fraud Detection Agent'), ('chat_agent', 'Chat Assistant Agent'), ('recommendation_engine', 'Recommendation Engine')], max_length=50)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('configuration', models.JSONField(default=dict)),
                ('last_execution', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('total_executions', models.IntegerField(default=0)),
                ('successful_executions', models.IntegerField(default=0)),
                ('avg_execution_time', models.FloatField(default=0.0)),
                ('last_error', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='AgentExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('input_data', models.JSONField(default=dict)),
                ('output_data', models.JSONField(default=dict)),
                ('error_message', models.TextField(blank=True)),
                ('execution_time', models.FloatField(help_text='Execution time in seconds', null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='executions', to='ai_agents.agent')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentRecommendation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('recommendation_type', models.CharField(choices=[('restock', 'Restock Recommendation'), ('price_change', 'Price Change Suggestion'), ('marketing_campaign', 'Marketing Campaign'), ('inventory_optimization', 'Inventory Optimization'), ('customer_retention', 'Customer Retection Action'), ('fraud_alert', 'Fraud Alert'), ('content_update', 'Content Update')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('data', models.JSONField(default=dict)),
                ('confidence_score', models.FloatField(default=0.0)),
                ('estimated_impact', models.JSONField(default=dict)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_implemented', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='ai_agents.agent')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_recommendations', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(blank=True, help_text='User-defined session title', max_length=200)),
                ('last_activity', models.DateTimeField(auto_now=True, db_index=True)),
                ('is_archived', models.BooleanField(default=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('context_window_size', models.IntegerField(default=10, help_text='Number of previous messages to include in context')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_activity'],
            },
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('assistant', 'Assistant Response'), ('system', 'System Message'), ('error', 'Error Response')], db_index=True, default='user', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], db_index=True, default='pending', max_length=20)),
                ('query', models.TextField(help_text="User's original query")),
                ('response', models.TextField(help_text='AI-generated response')),
                ('intent', models.CharField(choices=[('inventory_status', 'Inventory_Status'), ('sales_data', 'Sales_Data'), ('product_performance', 'Product_Performance'), ('order_status', 'Order_Status'), ('customer_insights', 'Customer_Insights'), ('revenue_analysis', 'Revenue_Analysis'), ('growth_trends', 'Growth_Trends'), ('top_products', 'Top_Products'), ('user_management', 'User_Management'), ('system_health', 'System_Health'), ('general_stats', 'General_Stats'), ('recommendations_request', 'Recommendations_Request')], db_index=True, help_text='Classified intent of the query', max_length=50)),
                ('execution_time', models.FloatField(default=0.0, help_text='Query processing time in seconds')),
                ('confidence_score', models.FloatField(default=0.0, help_text='AI confidence score (0-1)')),
                ('error_details', models.JSONField(blank=True, default=dict, help_text='Error details if processing failed')),
                ('metadat', models.JSONField(blank=True, default=dict, help_text='Additional message metadata')),
                ('is_edited', models.BooleanField(default=False)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('user_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='ai_agents.chatmessage')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_agents.chatsession')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(db_index=True)),
                ('total_queries', models.IntegerField(default=0)),
                ('total_sessions', models.IntegerField(default=0)),
                ('avg_response_time', models.FloatField(default=0.0)),
                ('avg_confidence_score', models.FloatField(default=0.0)),
                ('intent_distribution', models.JSONField(default=dict)),
                ('success_rate', models.FloatField(default=0.0)),
                ('error_rate', models.FloatField(default=0.0)),
                ('avg_rating', models.FloatField(blank=True, null=True)),
                ('feedback_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chat_analytics', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date', 'user'], name='ai_agents_c_date_dc8d9d_idx'), models.Index(fields=['-date'], name='ai_agents_c_date_433ff6_idx'), models.Index(fields=['user', '-date'], name='ai_agents_c_user_id_3cbb6e_idx')],
                'unique_together': {('date', 'user')},
            },
        ),
        migrations.CreateModel(
            name='ChatFeedback',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('feedback_type', models.CharField(choices=[('positive', 'Positive'), ('negative', 'Negative'), ('neutral', 'Neutral')], max_length=20)),
                ('rating', models.IntegerField(choices=[(1, '1 Star'), (2, '2 Stars'), (3, '3 Stars'), (4, '4 Stars'), (5, '5 Stars')], help_text='Rating from 1-5 stars')),
                ('reason', models.CharField(blank=True, choices=[('heplful', 'Response was helpful'), ('accurate', 'Information was accurate'), ('fast', 'Response was fast'), ('complete', 'Response was complete'), ('irrelevant', 'Response was irrelevant'), ('inaccurate', 'Information was inaccurate'), ('slow', 'Response was too slow'), ('incomplete', 'Response was incomplete'), ('unclear', 'Response was unclear'), ('other', 'Other reason')], help_text='Reason for the feedback', max_length=50)),
                ('comment', models.TextField(blank=True, help_text='Optional detailed feedback comment', max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_feedback', to=settings.AUTH_USER_MODEL)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='ai_agents.chatmessage')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['feedback_type', '-created_at'], name='ai_agents_c_feedbac_c1f5ce_idx'), models.Index(fields=['rating', '-created_at'], name='ai_agents_c_rating_c562b0_idx'), models.Index(fields=['message', 'user'], name='ai_agents_c_message_47e54f_idx'), models.Index(fields=['user', '-created_at'], name='ai_agents_c_user_id_272985_idx')],
                'unique_together': {('message', 'user')},
            },
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', '-last_activity'], name='ai_agents_c_user_id_f54db8_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['session_id'], name='ai_agents_c_session_c770b4_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['is_active', '-last_activity'], name='ai_agents_c_is_acti_c0ac10_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['is_archived', '-last_activity'], name='ai_agents_c_is_arch_79a0fa_idx'),
        ),
        migrations.AddIndex(
            model_name='chatsession',
            index=models.Index(fields=['user', 'is_active', '-last_activity'], name='ai_agents_c_user_id_c61c0f_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session', '-created_at'], name='ai_agents_c_session_9e7883_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session', 'message_type', '-created_at'], name='ai_agents_c_session_afaf98_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['intent', '-created_at'], name='ai_agents_c_intent_24b91d_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['confidence_score'], name='ai_agents_c_confide_1f5855_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['status', '-created_at'], name='ai_agents_c_status_96ebcd_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['user_ip', '-created_at'], name='ai_agents_c_user_ip_195045_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['is_deleted', '-created_at'], name='ai_agents_c_is_dele_c3108e_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['session', 'is_deleted', '-created_at'], name='ai_agents_c_session_c1aa66_idx'),
        ),
    ]
