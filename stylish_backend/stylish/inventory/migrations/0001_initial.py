# Generated by Django 5.2.4 on 2025-07-15 17:22

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ecommerce', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adjustment_type', models.CharField(choices=[('addition', 'Addition'), ('reduction', 'Reduction'), ('redistribution', 'Redistribution'), ('sync', 'Sync')], max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_log', to='ecommerce.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('initial_stock', models.IntegerField(default=0, help_text='Starting stock level - never changes after creation')),
                ('current_stock', models.IntegerField(default=0, help_text='Current available stock - changes with adjustments')),
                ('low_stock_threshold', models.IntegerField(blank=True, default=5, null=True)),
                ('reorder_point', models.IntegerField(blank=True, default=3, null=True)),
                ('reorder_quantity', models.IntegerField(blank=True, default=10, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='ecommerce.product')),
            ],
        ),
        migrations.CreateModel(
            name='StockAdjustment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(help_text='Amount of change(psotive for increase, negative for decrease)')),
                ('previous_stock', models.IntegerField(help_text='Stock level before adjustment')),
                ('adjustment_type', models.CharField(choices=[('add', 'Add Stock'), ('remove', 'Remove Stock'), ('set', 'Set Stock'), ('manual', 'Manual Adjustment'), ('restock', 'Restock'), ('inventory', 'Inventory Correction'), ('damaged', 'Damages/Lost'), ('sale', 'Sale'), ('return', 'Return')], default='manual', max_length=20)),
                ('reference', models.CharField(blank=True, help_text='Order number, invoice number, etc', max_length=100)),
                ('reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adjustments', to='inventory.inventoryrecord')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VariantStockLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('previous_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('current_stock', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('adjustment_type', models.CharField(choices=[('addition', 'Addition'), ('reduction', 'Reduction'), ('redistribution', 'Redistribution'), ('deletion', 'Deletion'), ('no_change', 'No Change'), ('initial_stock', 'Initial Stock'), ('sync', 'Sync')], default='no_change', max_length=20)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True, null=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='variant_stock_adjustments', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_stock_logs', to='ecommerce.product')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_logs', to='ecommerce.productvariant')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='inventoryrecord',
            index=models.Index(fields=['current_stock'], name='inventory_i_current_f0e54d_idx'),
        ),
        migrations.AddIndex(
            model_name='inventoryrecord',
            index=models.Index(fields=['product'], name='inventory_i_product_7bf532_idx'),
        ),
        migrations.AddIndex(
            model_name='stockadjustment',
            index=models.Index(fields=['adjustment_type'], name='inventory_s_adjustm_d014d9_idx'),
        ),
        migrations.AddIndex(
            model_name='stockadjustment',
            index=models.Index(fields=['created_at'], name='inventory_s_created_8901aa_idx'),
        ),
        migrations.AddIndex(
            model_name='stockadjustment',
            index=models.Index(fields=['inventory'], name='inventory_s_invento_07aec2_idx'),
        ),
        migrations.AddIndex(
            model_name='variantstocklog',
            index=models.Index(fields=['product'], name='inventory_v_product_c162ca_idx'),
        ),
        migrations.AddIndex(
            model_name='variantstocklog',
            index=models.Index(fields=['variant'], name='inventory_v_variant_caf53b_idx'),
        ),
        migrations.AddIndex(
            model_name='variantstocklog',
            index=models.Index(fields=['adjustment_type'], name='inventory_v_adjustm_9e227f_idx'),
        ),
        migrations.AddIndex(
            model_name='variantstocklog',
            index=models.Index(fields=['timestamp'], name='inventory_v_timesta_1ee959_idx'),
        ),
    ]
